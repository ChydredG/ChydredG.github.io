<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS布局技巧</title>
      <link href="/2022/10/15/CSS%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/"/>
      <url>/2022/10/15/CSS%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="溢出显示隐藏元素"><a href="#溢出显示隐藏元素" class="headerlink" title="溢出显示隐藏元素"></a>溢出显示隐藏元素</h2><h3 id="1-display"><a href="#1-display" class="headerlink" title="1.display:"></a>1.display:</h3><ul><li><p><code>display: none;</code> 隐藏对象</p></li><li><p><code>display : block;</code> 除了转换为块级元素之外，同时还有显示元素的意思</p><p>display隐藏元素后，<strong>不再占有</strong>原来的位置</p></li></ul><h3 id="2-visibility"><a href="#2-visibility" class="headerlink" title="2.visibility:"></a>2.visibility:</h3><ul><li><p><code>visibility : visible;</code> 元素可视</p></li><li><p><code>visibility : hidden;</code> 元素隐藏</p><p>visibility隐藏元素后，<strong>继续占有</strong>原来的位置</p></li></ul><h3 id="3-overflow"><a href="#3-overflow" class="headerlink" title="3.overflow:"></a>3.overflow:</h3><ul><li><p><code>overflow: hidden;</code> 不显示超过对象尺寸的内容，超出的部分隐藏掉</p></li><li><p><code>overflow: scroll;</code> 不管超出内容否，总是显示滚动条</p></li><li><p><code>overflow: auto;</code> 超出自动显示滚动条，不超出不显示滚动条</p><p><strong>有定位的盒子慎用</strong></p></li></ul><h2 id="精灵图与字体图标"><a href="#精灵图与字体图标" class="headerlink" title="精灵图与字体图标"></a>精灵图与字体图标</h2><h3 id="1-精灵图"><a href="#1-精灵图" class="headerlink" title="1.精灵图"></a>1.精灵图</h3><ul><li>为什么？一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接收和发送请求图片，造成服务器请求压力过大，这将大大降低页面的加载速度。因此，为了有效地减少服务器接收和发送请求的次数，提高页面的加载速度，出现了CSS精灵技术</li><li>原理：精灵图就是把多个小图标及背景加入到一张大图片中，引用时通过给盒子设定大小，再调整图片位置<code>background-position</code> 实现只显示小图标的效果。一般情况下都是往上往左移动，所以数值是负值。</li></ul><h3 id="2-字体图标"><a href="#2-字体图标" class="headerlink" title="2.字体图标"></a>2.字体图标</h3><ul><li>复杂哦</li></ul><h2 id="三角做法"><a href="#三角做法" class="headerlink" title="三角做法"></a>三角做法</h2><p>一些网站的菜单往往是一个矩形上方有个小三角，聊天框也是，这个三角怎么做呢？</p><h3 id="1-规则三角"><a href="#1-规则三角" class="headerlink" title="1.规则三角"></a>1.规则三角</h3><ul><li>盒子没有大小宽高都为0，给盒子设置<strong>相同粗细</strong>上下左右边框就可以看到成了一个正方形，这时<strong>把其他三个的背景颜色设置为透明</strong>，仅保留要设置方向三角的边框颜色即可，这样就成了一个等腰直角三角形，之后再通过定位调位置就行了</li></ul><h3 id="2-不规则三角"><a href="#2-不规则三角" class="headerlink" title="2.不规则三角"></a>2.不规则三角</h3><ul><li>大致方法与上述相同，<strong>相邻两边边框粗细设置为0</strong>；剩余下两边边框<strong>设置不同的粗细，其中一个设置透明</strong>即可弄出其他形状的直角三角形</li></ul><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><ul><li><p><code>vertical-align : baseline | top | middle | bottom</code></p></li><li><p>baseline:  默认。元素放置在父元素的基线上</p></li><li><p>top:  把元素的顶端与行中最高元素的顶端对齐</p></li><li><p>middle:  把此元素放置在父元素的中部</p></li><li><p>bottom:  把元素的顶端与行中最低的元素的顶端对齐</p><img src="/2022/10/15/CSS%E5%B8%83%E5%B1%80%E6%8A%80%E5%B7%A7/1.png" class title="字符的几条线"> </li><li><p>由于默认的是基线对齐，所以当有图片和文字在一起的盒子设置边框时会出现图片下方有一条缝隙的情况，这时只需要设置<code>vertical-align : bottom</code>即可消除该缝隙</p></li></ul><h2 id="单-x2F-多行文字溢出省略号显示"><a href="#单-x2F-多行文字溢出省略号显示" class="headerlink" title="单&#x2F;多行文字溢出省略号显示"></a>单&#x2F;多行文字溢出省略号显示</h2><h2 id="margin负值运用"><a href="#margin负值运用" class="headerlink" title="margin负值运用"></a>margin负值运用</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML+CSS学习笔记</title>
      <link href="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、HTML标签"><a href="#一、HTML标签" class="headerlink" title="一、HTML标签"></a>一、HTML标签</h2><h3 id="1-lt-p-gt-lt-br-gt-段落和换行标签"><a href="#1-lt-p-gt-lt-br-gt-段落和换行标签" class="headerlink" title="1.&lt;p&gt; &lt;/br&gt;段落和换行标签"></a>1.<code>&lt;p&gt; &lt;/br&gt;</code>段落和换行标签</h3><ul><li><p>段落标签</p><p><code>&lt;p&gt;&lt;/p&gt;</code></p><p>双标签，属于块级元素，可以设置宽高。</p></li><li><p>换行标签</p><p><code>&lt;/br&gt;</code></p><p>单标签，用于换行。</p></li></ul><h3 id="2-文本格式化标签"><a href="#2-文本格式化标签" class="headerlink" title="2.文本格式化标签"></a>2.文本格式化标签</h3><ul><li><p>加粗</p><p><code>&lt;strong&gt; &lt;b&gt;</code></p></li><li><p>倾斜</p><p><code>&lt;em&gt; &lt;i&gt;</code></p></li><li><p>删除线</p><p><code>&lt;del&gt; &lt;s&gt;</code></p></li><li><p>下划线</p><p><code>&lt;ins&gt; &lt;u&gt;</code></p><p>以上标签均为双标签！！！！</p></li></ul><h3 id="3-lt-img-gt-图像标签"><a href="#3-lt-img-gt-图像标签" class="headerlink" title="3.&lt;img&gt;图像标签"></a>3.<code>&lt;img&gt;</code>图像标签</h3><ul><li><p>主要属性：</p><p>1.src:”图片路径” :必须属性，可以是相对路径，也可以是超链接</p><p>2.alt:”文本” :替换文本，图像不能显示时显示文字</p><p>3.title:”文本” :提示文本，鼠标放在图像上时出现的文字</p></li><li><p>注意：</p><p>1.img图像标签为单标签</p><p>2.img标签属于行内元素，但是可以设置宽高！！！！</p></li></ul><h3 id="4-相对路径介绍"><a href="#4-相对路径介绍" class="headerlink" title="4.相对路径介绍"></a>4.相对路径介绍</h3><ul><li><p>以文件本身为参考，目标文件的路径</p><p>1.同一级路径：直接写目标文件名</p><p>2.下一级路径：&#x2F;</p><p>2.上一级路径：..&#x2F;</p></li></ul><h3 id="5-lt-a-gt-超链接标签"><a href="#5-lt-a-gt-超链接标签" class="headerlink" title="5.&lt;a&gt;超链接标签"></a>5.<code>&lt;a&gt;</code>超链接标签</h3><h3 id="6-特殊字符输入"><a href="#6-特殊字符输入" class="headerlink" title="6.特殊字符输入"></a>6.特殊字符输入</h3><ul><li><p>有时我们文本中会出现&lt;、&gt;等字符，它们与HTML标签框冲突，需要用特殊表达方式代替：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.jpg" class title="特殊字符用法"><p>只有空格、小于号、大于号三个用的比较多，重点记！！！！</p></li></ul><h3 id="7-lt-table-gt-表格标签"><a href="#7-lt-table-gt-表格标签" class="headerlink" title="7.&lt;table&gt;表格标签"></a>7.<code>&lt;table&gt;</code>表格标签</h3><ul><li><p>基本语法</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.jpg" class title="表格标签基本语法"> </li><li><p>属性</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.jpg" class title="表格标签属性">  </li><li><p>表头单元格语法</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.jpg" class title="表头单元格基本语法">  </li><li><p>表格结构标签</p></li></ul><p>​       <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.jpg" class title="表格结构">  </p><ul><li>合并相邻边框 <code>border-collapse:collapse</code></li></ul><h3 id="8-lt-ul-gt-lt-ol-gt-列表标签"><a href="#8-lt-ul-gt-lt-ol-gt-列表标签" class="headerlink" title="8.&lt;ul&gt; &lt;ol&gt;列表标签"></a>8.<code>&lt;ul&gt; &lt;ol&gt;</code>列表标签</h3><ul><li>无序列表<code>&lt;ul&gt;</code></li><li>有序列表<code>&lt;ol&gt;</code></li><li>自定义列表：</li></ul><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.jpg" class title="自定义列表">  <h3 id="9-lt-form-gt-表单域"><a href="#9-lt-form-gt-表单域" class="headerlink" title="9.&lt;form&gt;表单域"></a>9.<code>&lt;form&gt;</code>表单域</h3><ul><li><p>表单域是一个包含表单元素的区域，实现用户信息的收集和传递</p></li><li><p><code>&lt;form&gt;</code>会把它范围内的表单元素信息提交给服务器</p></li><li><p>语法与属性：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7.jpg" class title="表单域语法与属性"></li></ul><h3 id="10-lt-input-gt-表单标签"><a href="#10-lt-input-gt-表单标签" class="headerlink" title="10.&lt;input&gt;表单标签"></a>10.<code>&lt;input&gt;</code>表单标签</h3><ul><li><p><code>&lt;input&gt;</code>是一个单标签，属于行内元素，但是可以设置宽高</p></li><li><p>type属性值：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8.jpg" class title="input标签type属性">  <p><strong>单选按钮和复选框必须要有一样的name属性</strong></p></li><li><p>其他属性：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.jpg" class title="input标签其他属性"></li></ul><h3 id="11-lt-label-gt-标签"><a href="#11-lt-label-gt-标签" class="headerlink" title="11.&lt;label&gt;标签"></a>11.<code>&lt;label&gt;</code>标签</h3><ul><li><p>label标签为input元素定义标注</p></li><li><p>搭配input单选复选框标签使用，实现点击文本也可以完成选择，增加用户体验</p></li><li><p>label的for属性因该与input的id属性一致</p></li><li><p>语法与注意事项：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.jpg" class title="label标签语法与核心"></li></ul><h3 id="12-lt-select-gt-表单标签"><a href="#12-lt-select-gt-表单标签" class="headerlink" title="12.&lt;select&gt;表单标签"></a>12.<code>&lt;select&gt;</code>表单标签</h3><ul><li><p>select表单标签即下拉列表</p></li><li><p>语法与注意事项：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11.jpg" class title="select语法与注意事项"></li></ul><h3 id="13-lt-textarea-gt-表单标签"><a href="#13-lt-textarea-gt-表单标签" class="headerlink" title="13.&lt;textarea&gt;表单标签"></a>13.<code>&lt;textarea&gt;</code>表单标签</h3><ul><li><p>textarea属于多行文本输入框</p></li><li><p>语法：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/12.jpg" class title="textarea语法"></li></ul><h2 id="二、CSS选择器"><a href="#二、CSS选择器" class="headerlink" title="二、CSS选择器"></a>二、CSS选择器</h2><h3 id="1-基础选择器"><a href="#1-基础选择器" class="headerlink" title="1.基础选择器"></a>1.基础选择器</h3><ul><li><p>标签选择器  div {****}</p></li><li><p>类选择器  class&#x3D;”aaa”  .aaa{****}</p></li><li><p>id选择器   id&#x3D;”aaa”   #aaa{****}</p></li><li><p>通配符选择器    <em>{</em>***} 选择所有标签</p></li><li><p>总结图：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13.jpg" class title="基础选择器总结"></li></ul><h3 id="2-复合选择器"><a href="#2-复合选择器" class="headerlink" title="2.复合选择器"></a>2.复合选择器</h3><ul><li><p>后代选择器  空格隔开</p></li><li><p>子代选择器   &gt;</p></li><li><p>并集选择器    ,</p></li><li><p>链接伪类选择器：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/14.jpg" class title="链接伪类选择器"> </li><li><p>:focus 选择器：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/15.jpg" class title=":focus 选择器"> </li><li><p>总结图：</p><img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16.jpg" class title="复合选择器总结"></li></ul><h3 id="3-权重-x2F-优先级"><a href="#3-权重-x2F-优先级" class="headerlink" title="3.权重 &#x2F; 优先级"></a>3.权重 &#x2F; 优先级</h3> <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18.jpg" class title="选择器权重 &#x2F; 优先级"><h2 id="三、元素显示模式"><a href="#三、元素显示模式" class="headerlink" title="三、元素显示模式"></a>三、元素显示模式</h2><h3 id="1-块元素"><a href="#1-块元素" class="headerlink" title="1.块元素"></a>1.块元素</h3><ul><li><p>常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>是最典型的块元素</p></li><li><p>块元素特点：</p><p>1.独占一行</p><p>2.宽高，内外边距可控</p><p>3.宽度默认为父元素的100%</p><p>4.是一个容器，可以放块元素和行内元素</p></li><li><p>注意！<strong>文字类元素内不能放块级元素</strong>，如<code>&lt;p&gt;、&lt;h1&gt;~&lt;h6&gt;</code></p></li></ul><h3 id="2-行内元素（内联元素）"><a href="#2-行内元素（内联元素）" class="headerlink" title="2.行内元素（内联元素）"></a>2.行内元素（内联元素）</h3><ul><li><p>常见的行内元素有<code>&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;</code>等，其中<code>&lt;span&gt;</code>是最典型的行内元素</p></li><li><p>行内元素特点：</p><p>1.相邻行内元素在一行上，一行可以显示多个</p><p>2.无法设置宽高，默认宽度就是它本身内容的宽度</p><p>3.行内元素只能容纳文本或其他行内元素</p></li><li><p>注意！</p><p>1.链接里面不能再放链接</p><p>2.特殊情况链接<code>&lt;a&gt;</code>里面可以放块级元素，但是给<code>&lt;a&gt;</code>转换一下块级模式最安全</p></li></ul><h3 id="3-行内块元素"><a href="#3-行内块元素" class="headerlink" title="3.行内块元素"></a>3.行内块元素</h3><ul><li><p>像<code>&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;</code>，它们同时具有块元素和行内元素的特点，则称它们为行内块元素</p></li><li><p>行内块元素特点：</p><p>1.和相邻行内元素(行内块)在一行上，但是他们之间会有空白缝隙。一行可以显示多个(行内元素特点)</p><p>2.默认宽度就是它本身内容的宽度(行内元素特点)</p><p>3.宽高，内外边距可控(块元素特点)</p></li></ul><h3 id="4-元素显示模式总结"><a href="#4-元素显示模式总结" class="headerlink" title="4.元素显示模式总结"></a>4.元素显示模式总结</h3>  <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/17.jpg" class title="元素显示模式总结"> <h2 id="四、CSS样式"><a href="#四、CSS样式" class="headerlink" title="四、CSS样式"></a>四、CSS样式</h2><h3 id="1-文字样式"><a href="#1-文字样式" class="headerlink" title="1.文字样式"></a>1.文字样式</h3><ul><li><p>文字风格 <code>font-style</code> 值：normal 正常 ， italic 斜体</p></li><li><p>文字粗细 <code>font-weight</code> 值：400正常  700加粗</p></li><li><p>文字大小 <code>font-size</code> 单位px</p></li><li><p>文字行高 <code>line-height</code> 单位px 高度与盒子一直即可实现文字垂直居中对齐</p></li><li><p>字体 <code>font-family</code></p></li><li><p>字体复合属性设置：</p><p><code>font: font-style font-weight font-size/line-height font-family;</code></p><p>一种写法：<code>font: 12px/1.5 字体</code>  即line-height是font-size的1.5倍</p><p>注意！</p><p>1.使用 font 属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开</p><p>2.不需要设置的属性可以省略(取默认值)，但<strong>必须保留 font-size 和 font-family 属性</strong>，否则 font 属性将不起作用</p></li><li><p>文本水平居中：<code>text-align = center</code></p></li><li><p>文本缩进：<code>text-indent</code> 值可取px和em，1em &#x3D; 一个文字大小</p></li><li><p>装饰文本：<code>text-decoration</code>  </p><p>none：没有装饰线，用于消除链接a自带下划线   underline：下划线    overline：上划线    line-through：删除线</p></li></ul><h3 id="2-背景图片"><a href="#2-背景图片" class="headerlink" title="2.背景图片"></a>2.背景图片</h3><ul><li><p>背景颜色 <code>background-color</code> 值：颜色值，transparent透明</p></li><li><p>背景图片 <code>background-image = url(图片网址或路径)</code></p></li><li><p>背景平铺 <code>background-repeat</code> 值：repeat：xy都重复，no-repeat：不重复，repeat-x，repeat-y</p></li><li><p>背景图片位置 <code>background-position: x y</code> 值：方位名词：top | bottom | right | left | center ，精确单位，百分数</p><p>1.参数是方位名词：</p><ul><li><p>如果指定的两个值都是方位名词，则两个值前后顺序无关，比如left top和top left效果一致</p></li><li><p>如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐</p></li></ul><p>2.参数是精确单位：</p><ul><li>如果参数值是精确坐标，那么第一个肯定是x坐标，第二个一定是y坐标</li><li>如果只指定一个数值，那该数值一定是x坐标，另一个默认垂直居中</li><li>负值向左向上，正值向右向下</li></ul><p>3.参数是混合单位: </p><ul><li>如果指定的两个值是精确单位和方位名词混合使用，则第一个值是x坐标，第二个值是y坐标</li></ul></li><li><p>背景图像固定 <code>background-attachment </code> 值：scroll 背景会跟着滚动  ， fixed 背景不会跟着滚动</p></li><li><p>背景色透明 <code>background: rgba(0,0,0,0.3)</code>最后一个是alpha透明度，取值0~1</p></li><li><p>背景复合属性设置：</p><p><code>background: background-color background-image = url() background-repeat background-attachment;background-position  颜色  图片  重复  固定  定位</code></p></li><li><p>背景图像大小 <code>background-size</code> 值：</p><p>1.cover：保持图像的纵横比并将图像缩放成将<strong>完全覆盖背景定位区域</strong>的最小大小，即宽和高都达到最大</p><p>2.contain：保持图像的纵横比并将图像缩放成将<strong>适合背景定位区域</strong>的最大大小，即宽或高其中一个达到最大就ok</p></li></ul><h3 id="3-边框border"><a href="#3-边框border" class="headerlink" title="3.边框border"></a>3.边框border</h3><ul><li><p>语法：</p>  <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19.jpg" class title="边框语法"> </li><li><p>边框样式 <code>border-style</code> 值：solid 实线，dashed 虚线，dotted 点线</p></li><li><p>合并相邻边框 <code>border-collapse:collapse</code></p></li><li><p>边框会影响盒子实际大小</p></li><li><p>圆角边框 <code>border-radius: 大小，百分比</code> <strong>设置为高度的一半即50%可实现圆</strong>，矩形则可实现胶囊</p><p>该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角，分开写: </p><p><code>border-top-left-radius、border-top-right-radius、border-bottom-right-radius、border-bottom-left-radius</code></p></li></ul><h3 id="4-内边距padding"><a href="#4-内边距padding" class="headerlink" title="4.内边距padding"></a>4.内边距padding</h3><ul><li><code>padding：10px; 上下左右都是10px</code></li><li><code>padding：10px 20px;  上下10px  左右20px</code></li><li><code>padding：10px 20px 10px;  上10px   左右20px   下10px</code></li><li><code>padding：10px 10px 10px 10px; 上 下 左 右</code></li><li>如果盒子<strong>没有设置宽高，padding不会撑开盒子</strong>，设置了就会撑开</li></ul><h3 id="5-外边距margin"><a href="#5-外边距margin" class="headerlink" title="5.外边距margin"></a>5.外边距margin</h3><ul><li><p>简写与padding相同</p></li><li><p>外边距可以让块级盒子水平居中，但是盒子必须指定了宽度 width ，具体设置 <code>margin：0  auto;</code></p></li><li><p>块级元素使用margin实现水平居中，行内和行内块则是给父盒子添加 <code>text-align = center</code> 即可实现水平居中</p></li><li><p>上下外边距合并：<strong>给上下两个盒子分别添加下边距和上边距时，实际边距是这两个中的最大值，而不是叠加</strong></p></li><li><p>上外边距塌陷：<strong>当父盒子有上外边距时，子盒子设置较小的上外边距会无效</strong>，解决方案</p><p>1.可以为父元素定义上边框</p><p>2.可以为父元素定义上内边距</p><p>3.可以为父元素添加overflow:hidden</p><p><strong>浮动、固定，绝对定位</strong>的盒子不会出现此问题</p></li></ul><h3 id="6-阴影"><a href="#6-阴影" class="headerlink" title="6.阴影"></a>6.阴影</h3><ul><li><p>盒子阴影 语法：</p> <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.jpg" class title="盒子阴影语法"> </li><li><p>文字阴影 语法：</p> <img src="/2022/10/15/HTML-CSS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21.jpg" class title="文字阴影语法"></li></ul><h3 id="7-用户鼠标样式"><a href="#7-用户鼠标样式" class="headerlink" title="7.用户鼠标样式"></a>7.用户鼠标样式</h3><ul><li><code>cursor: default;</code>  小白默认</li><li><code>cursor: pointer;</code>  小手</li><li><code>cursor: move;</code>  移动</li><li><code>cursor: text;</code>  文本</li><li><code>cursor: not-allowed;</code>  禁止</li></ul><h2 id="五、CSS布局"><a href="#五、CSS布局" class="headerlink" title="五、CSS布局"></a>五、CSS布局</h2><h3 id="1-网页布局准则："><a href="#1-网页布局准则：" class="headerlink" title="1.网页布局准则："></a>1.网页布局准则：</h3><ul><li><p>1.多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动</p><p>2.先设置盒子大小,之后设置盒子的位置</p></li><li><p>为了约束浮动元素位置,我们网页布局一般采取的策略是:</p><p><strong>先用标准流的父元素排列上下位置，之后内部子元素采取浮动排列左右位置。符合网页布局第一准侧</strong></p></li></ul><h3 id="2-浮动"><a href="#2-浮动" class="headerlink" title="2.浮动"></a>2.浮动</h3><ul><li>浮动元素特性：脱离标准普通流的控制，移动到指定位置，浮动的盒子<strong>不再保留原先的位置</strong></li><li><strong>任何元素</strong>都可以浮动。不管原先是什么模式的元素，浮动的元素会一行内显示并且元素顶部对齐互相贴靠在一起(无缝隙)，如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。添加浮动之后<strong>具有行内块元素相似的特性</strong>。<br>如果<strong>块级盒子</strong>没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定</li><li>浮动的盒子只会影响浮动盒子后面的标准流不会影响前面的标准流</li></ul><h3 id="3-清除浮动"><a href="#3-清除浮动" class="headerlink" title="3.清除浮动"></a>3.清除浮动</h3><ul><li><p>为什么清除浮动？<strong>父盒子如果没设置高度，子盒子全浮动父盒子高度就是0了</strong>，会影响到后面标准流</p></li><li><p>清除浮动策略：闭合浮动：<code>clear: both;</code></p></li><li><p>方法：</p><p>1.额外标签</p><p>2.伪元素</p></li></ul><h3 id="4-定位"><a href="#4-定位" class="headerlink" title="4.定位"></a>4.定位</h3><ul><li><p><strong>相对定位</strong> <code>position: relative;</code> </p><p>特点：</p><p>1.它是相对于自己原来的位置来移动的(<strong>移动位置的时候参照点是自己原来的位置</strong>)</p><p>2.原来<strong>在标准流的位置继续占有</strong>，后面的盒子仍然以标准流的方式对特它。(<strong>不脱标，继续保留原来位置</strong>)因此，相对定位并没有脱标。它最典型的应用是给绝对定位当爹的</p></li><li><p><strong>绝对定位</strong> <code>position: absolute;</code> </p><p>特点：</p><p>1.如果<strong>没有祖先元素</strong>或者<strong>祖先元素没有定位</strong>，则以浏览器为准定位( Document文档)</p><p>2.如果祖先元素有定位(相对、绝对、固定定位），则以最近一级的有定位祖先元素为参考点移动位置</p><p>3.绝对定位<strong>不再占有原先的位置</strong>(脱标)</p></li><li><p><strong>固定定位</strong> <code>position: fixed;</code> </p><p>特点：</p><p>1.以浏览器的可视窗口为参照点移动元素。跟父元素没有任何关系，不随滚动条滚动。</p><p>2.固定定位<strong>不在占有原先的位置</strong>，也是脱标的，可以看做是一种特殊的绝对定位。</p><p><strong>固定定位小技巧：</strong></p><ul><li><p>让固定定位的盒子left: 50%.走到浏览器可视区（也可以看做版心）的一半位置</p></li><li><p>让固定定位的盒子margin-left:版心宽度的一半距离。多走版心宽度的一半位置</p></li></ul></li><li><p><strong>粘性定位</strong> <code>position: sticky;</code></p><p> 特点：</p><p>1.跟随浏览器移动，以浏览器的可视窗口为参照点移动元素(固定定位特点)</p><p>2.粘性定位<strong>占有原先的位置</strong>(相对定位特点)</p><p>3.<strong>必须添加</strong>top . left、right、bottom其中一个才有效</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/14/hello-world/"/>
      <url>/2022/10/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
